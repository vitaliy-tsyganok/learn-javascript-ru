/* https://learn.javascript.ru/task/recipients-read

Хранение отметок "не прочитано"
важность: 5
Есть массив сообщений: */

let messages = [
	{ text: 'Hello', from: 'John' },
	{ text: 'How goes?', from: 'John' },
	{ text: 'See you soon', from: 'Alice' },
];
/* У вас есть к ним доступ, но управление этим массивом происходит где-то ещё. Добавляются новые сообщения и удаляются старые, и вы не знаете в какой момент это может произойти.

Имея такую вводную информацию, решите, какую структуру данных вы могли бы использовать для ответа на вопрос «было ли сообщение прочитано?». Структура должна быть подходящей, чтобы можно было однозначно сказать, было ли прочитано это сообщение для каждого объекта сообщения.

P.S. Когда сообщение удаляется из массива messages, оно должно также исчезать из структуры данных.

P.P.S. Нам не следует модифицировать сами объекты сообщений, добавлять туда свойства. Если сообщения принадлежат какому-то другому коду, то это может привести к плохим последствиям. */

// Решение
// Для хранения данных о прочтении сообщений лучше всего подойдет структура WeakSet
const readedMessages = new WeakSet();

// Добавляем прочитанные сообщения
readedMessages.add(messages[0]);
readedMessages.add(messages[1]);

// Если снова прочитать первое сообщение, то при добавлении в WeakSet дубля не будет
readedMessages.add(messages[0]);

// Было ли сообщение messages[0] прочитано?
readedMessages.has(messages[0]); // true

// Альтернативное решение
const isRead = Symbol('isRead');
messages[0][isRead] = true;

// Было ли сообщение messages[0] прочитано?
messages[0][isRead]; // true

// Использование символов также безопасно, так как чужой код врядли увидит наше символьное своейство, но лучше обходиться без модификаций сторонних объектов, храня данные на своей стороне. Поэтому в данном случае использование WeakSet является более правильным решением с архитектурной точки зрения
